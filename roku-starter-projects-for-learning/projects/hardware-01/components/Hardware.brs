sub init()
    print "in hardware project"
    deviceInfo = CreateObject("roDeviceInfo")
    print "model is " deviceInfo.GetModel() deviceInfo.GetModelDisplayName()
    print "model details are " FormatJson(deviceInfo.GetModelDetails())
    print "serial number is  " deviceInfo.GetChannelClientId()
    print "Unique ID is " deviceInfo.GetRIDA()
    print "Random ID is " deviceInfo.GetRandomUUID() 
    print "Is ID tracking disabled? " deviceInfo.IsRIDADisabled()
    print "firmware is " deviceInfo.GetVersion()
    print "os version is " FormatJson(deviceInfo.GetOSVersion())
    print "friendly name is " deviceInfo.GetFriendlyName()
    print "display type is " deviceInfo.GetDisplayType()
    print "resolution is " deviceInfo.GetDisplaySize()
    print "user country code is " deviceInfo.GetUserCountryCode()
    print "country code is " deviceInfo.GetCountryCode()
    print "preferred caption language is " deviceInfo.GetPreferredCaptionLanguage()
    print "time zone is " deviceInfo.GetTimeZone()
    print "current locale is " deviceInfo.GetCurrentLocale()
    print "supports dolby 5.1 " deviceInfo.HasFeature("5.1_surround_sound")
    print "supports dolby 5.1 " deviceInfo.HasFeature("can_output_5.1_surround_sound")
    print "supports standard definition only " deviceInfo.HasFeature("sd_only_hardware")
    print "supports usb " deviceInfo.HasFeature("usb_hardware")
    print "supports sd card " deviceInfo.HasFeature("sdcard_hardware")
    print "supports ethernet " deviceInfo.HasFeature("ethernet_hardware")
    print "supports gaming hardware " deviceInfo.HasFeature("gaming_hardware")
    print "supports energy star compliance " deviceInfo.HasFeature("energy_star_compliant")
    print "supports soundbar hardware " deviceInfo.HasFeature("soundbar_hardware")
    print "seconds since last key press is " deviceInfo.TimeSinceLastKeypress()
    print "drm system in use " FormatJson(deviceInfo.GetDrmInfoEx())
    print "captions mode is " deviceInfo.GetCaptionsMode()

    print "Font=" deviceInfo.GetCaptionsOption("Text/Font")
    print "Color=" deviceInfo.GetCaptionsOption("Text/Color")
    print "Size=" deviceInfo.GetCaptionsOption("Text/Size")
    print "Effect=" deviceInfo.GetCaptionsOption("Text/Effect")
    print "Opacity=" deviceInfo.GetCaptionsOption("Text/Opacity")
    print "Background Color=" deviceInfo.GetCaptionsOption("Background/Color")
    print "Background Opacity=" deviceInfo.GetCaptionsOption("Background/Opacity")
    print "Window Color=" deviceInfo.GetCaptionsOption("Window/Color")
    print "Window Opacity=" deviceInfo.GetCaptionsOption("Window/Opacity")
    print "clock 12/24 hour format " deviceInfo.GetClockFormat()
    print "enabling app focus events " deviceInfo.EnableAppFocusEvent(true)
    print "low memory warnings enabled " deviceInfo.EnableLowGeneralMemoryEvent(true)
    print "get memory level " deviceInfo.GetGeneralMemoryLevel()
    print "network status " deviceInfo.GetLinkStatus()
    print "network status notifications enabled " deviceInfo.EnableLinkStatusEvent(true)
    print "network connection type " deviceInfo.GetConnectionType()
    print "external ip " deviceInfo.GetExternalIp()
    print "private IP " deviceInfo.GetIPAddrs()
    print "connection info " deviceInfo.GetConnectionInfo()
    print "display type " deviceInfo.GetDisplayType()
    print "display mode " deviceInfo.GetDisplayMode()
    print "aspect ratio " deviceInfo.GetDisplayAspectRatio()
    print "display size " deviceInfo.GetDisplaySize()
    print "video mode " deviceInfo.GetVideoMode()
    print "display properties " deviceInfo.GetDisplayProperties()
    print "supported resolutions " FormatJson(deviceInfo.GetSupportedGraphicsResolutions())
    'print "can support " deviceInfo.CanDecodeVideo("mp4")
    print "UI resolution " FormatJson(deviceInfo.GetUIResolution())



end sub